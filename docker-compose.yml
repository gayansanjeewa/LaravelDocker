version: '3'

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    image: laravel/nginx:production
    volumes:
      - ./:/var/www/html
    ports:
      - "8010:80"
    networks:
      - laravel
    depends_on:
      - php
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: laravel/php-fpm:production
    volumes:
      - ./:/var/www/html
    networks:
      - laravel
  redis:
    image: redis:alpine
    networks:
      - laravel
  mysql:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    image: laravel/mysql:production
    volumes:
      - ./database/mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - TZ=${TZ}
    networks:
      - laravel
  portainer:
    image: portainer/portainer
    container_name: "laravel_portainer"
    command: --templates http://templates/templates.json --host=unix:///var/run/docker.sock
    networks:
      - laravel
    ports:
      - "9001:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  horizon:
    build:
      context: ./docker/horizon
      dockerfile: Dockerfile
    image: laravel/horizon:production
    volumes:
      - ./:/var/www/html
    networks:
      - laravel
  cron:
    build:
      context: ./docker/cron
      dockerfile: Dockerfile
    image: laravel/cron:production
    volumes:
      - ./:/var/www/html
      - /tmp:/tmp
  node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    image: laravel/node:production
    volumes:
      - ./:/var/www/html
networks:
  laravel:
    driver: "bridge"
